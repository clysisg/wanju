<?php
/**
 * Created by PhpStorm.
 * User: qgc
 * Date: 2017/4/14
 * Time: 18:01
 */

namespace app\common\corelib;

use yii\helpers\StringHelper;

class YiiCache extends \yii\redis\Cache
{
    /**
     * Builds a normalized cache key from a given key.
     *
     * If the given key is a string containing alphanumeric characters only and no more than 32 characters,
     * then the key will be returned back prefixed with [[keyPrefix]]. Otherwise, a normalized key
     * is generated by serializing the given key, applying MD5 hashing, and prefixing with [[keyPrefix]].
     *
     * @param mixed $key the key to be normalized
     * @return string the generated cache key
     */
    public function buildKey($key)
    {
        if (is_string($key)) {
            //$key = ctype_alnum($key) && StringHelper::byteLength($key) <= 32 ? $key : md5($key);
            $key = StringHelper::byteLength($key) <= 64 ? $key : md5($key);
        } else {
            $key = md5(json_encode($key));
        }
        //echo $this->keyPrefix . $key;die;
        return $this->keyPrefix . $key;
    }
 }